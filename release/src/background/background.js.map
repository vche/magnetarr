{"mappings":"A,C,KECA,MAAM,EACF,WAAW,MAAO,CAAE,MAAO,EAAI,CAE/B,aAAe,CAClB,CAEG,SAAS,CAAG,CAAE,CAAE,MAAO,CAAA,CAAO,CAClC,CAGO,MAAM,UAAa,EACtB,WAAW,MAAO,CAAE,MAAO,MAAO,CAElC,SAAS,CAAG,CAAE,CAAE,QAAO,EAAI,KAAK,CAAC,qCAAkD,CACvF,CA2BA,IAAM,EAAe,CAAC,EDvCtB,SAAS,EAAiB,CAAO,EAC/B,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAA,EAAK,cAAc,CAAA,CAAI,EAAE,SAAS,CAAQ,EAC9D,CAAS,CAAC,EAAE,EAAI,ACyCjB,SAA4B,CAAG,EAClC,IAAK,GAAM,CAAC,EAAM,EAAS,GAAI,OAAO,OAAO,CAAC,GAC1C,GAAI,EAAS,QAAQ,CAAC,GAAM,OAAO,EAEvC,OAAO,IACX,ED9C2C,CAAQ,CAAC,EAAE,CAAC,GAAG,EAClD,OAAO,MAAM,CAAC,MAAM,CAAC,EAAQ,KAAK,EAElC,OAAO,MAAM,CAAC,OAAO,CAAC,EAAQ,KAAK,CAEzC,EACF,CCgCA,CAAY,CAAC,EAAK,IAAI,CAAC,CAAG,IAAI,ED7B9B,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GACpC,OAAO,aAAa,CAAC,WAAW,CAAC,WAAW,CAAC,E,C","sources":["<anon>","src/background/background.js","src/lib/provider.js"],"sourcesContent":["(() => {\nclass $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"\";\n    }\n    constructor(){}\n    urlMatch(url) {\n        return false;\n    }\n}\nclass $d0175d9ba891ce1f$export$95ff3f2cef1aeda extends $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"Imdb\";\n    }\n    urlMatch(url) {\n        return url.match(/\\/\\/www\\.imdb.com\\/.+\\/tt\\d{7,8}\\//) ? true : false;\n    }\n}\nclass $d0175d9ba891ce1f$export$cc923ee7e8796969 extends $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"Tvdb\";\n    }\n    urlMatch(url) {\n        return url.match(/.*thetvdb.com\\/.*id\\=\\d{1,7}/) ? true : false;\n    }\n}\nclass $d0175d9ba891ce1f$export$40e8b8a63495e688 extends $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"TraktTv\";\n    }\n    urlMatch(url) {\n        return url.match(/.*trakt.tv\\/(shows|movies)\\//) ? true : false;\n    }\n}\nclass $d0175d9ba891ce1f$export$3e3dab1427dcef9e extends $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"RottenTomatoes\";\n    }\n    urlMatch(url) {\n        return url.match(/.*rottentomatoes.com\\/(tv|m)\\//) ? true : false;\n    }\n}\nclass $d0175d9ba891ce1f$export$d17694f8fb28c7d extends $d0175d9ba891ce1f$var$Provider {\n    static get name() {\n        return \"TheMovieDb\";\n    }\n    urlMatch(url) {\n        return url.match(/.*themoviedb.org\\/(tv|movie)\\//) ? true : false;\n    }\n}\n// Build the list of available providers\nconst $d0175d9ba891ce1f$var$ProviderList = {};\n$d0175d9ba891ce1f$var$ProviderList[$d0175d9ba891ce1f$export$95ff3f2cef1aeda.name] = new $d0175d9ba891ce1f$export$95ff3f2cef1aeda();\nfunction $d0175d9ba891ce1f$export$1284f32c93cfe5ef(url) {\n    for (const [name, provider] of Object.entries($d0175d9ba891ce1f$var$ProviderList)){\n        if (provider.urlMatch(url)) return provider;\n    }\n    return null;\n}\n\n\n\"use strict\";\nfunction $b61950db06f93f98$var$handlePageAction(tabInfo) {\n    chrome.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function(tabArray) {\n        if (tabArray[0] && (0, $d0175d9ba891ce1f$export$1284f32c93cfe5ef)(tabArray[0].url)) chrome.action.enable(tabInfo.tabId);\n        else chrome.action.disable(tabInfo.tabId);\n    });\n}\n// Register our page parser when a tab gets activated and when a page gets loaded\nchrome.tabs.onActivated.addListener($b61950db06f93f98$var$handlePageAction);\nchrome.webNavigation.onCommitted.addListener($b61950db06f93f98$var$handlePageAction);\n\n})();\n//# sourceMappingURL=background.js.map\n","\"use strict\";\nimport {getProviderFromUrl} from \"../lib/provider\";\n\nfunction handlePageAction(tabInfo) {\n  chrome.tabs.query({active:true,currentWindow:true},function(tabArray){\n    if ((tabArray[0])&&(getProviderFromUrl(tabArray[0].url))) {\n        chrome.action.enable(tabInfo.tabId);\n    } else {\n        chrome.action.disable(tabInfo.tabId);\n    }\n  });\n}\n\n// Register our page parser when a tab gets activated and when a page gets loaded\nchrome.tabs.onActivated.addListener(handlePageAction);\nchrome.webNavigation.onCommitted.addListener(handlePageAction);\n","\nclass Provider {\n    static get name() { return \"\"; }\n\n    constructor () {\n\t}\n    \n    urlMatch(url) { return false; }\n}\n\n\nexport class Imdb extends Provider {\n    static get name() { return \"Imdb\";}\n\n    urlMatch(url) { return url.match(/\\/\\/www\\.imdb.com\\/.+\\/tt\\d{7,8}\\//)?true:false; }\n}\n\nexport class Tvdb extends Provider {\n    static get name() { return \"Tvdb\";}\n\n    urlMatch(url) { return url.match(/.*thetvdb.com\\/.*id\\=\\d{1,7}/)?true:false; }\n}\n\nexport class TraktTv extends Provider {\n    static get name() { return \"TraktTv\";}\n\n    urlMatch(url) { return url.match(/.*trakt.tv\\/(shows|movies)\\//)?true:false; }\n}\n\nexport class RottenTomatoes extends Provider {\n    static get name() { return \"RottenTomatoes\";}\n\n    urlMatch(url) { return url.match(/.*rottentomatoes.com\\/(tv|m)\\//)?true:false; }\n}\n\nexport class TheMovieDb extends Provider {\n    static get name() { return \"TheMovieDb\";}\n\n    urlMatch(url) { return url.match(/.*themoviedb.org\\/(tv|movie)\\//)?true:false; }\n}\n\n// Build the list of available providers\nconst ProviderList = {};\nProviderList[Imdb.name] = new Imdb();\n\n// Find a provider matching this url\nexport function getProviderFromUrl(url) {\n    for (const [name, provider] of Object.entries(ProviderList)) {\n        if (provider.urlMatch(url)) return provider;\n    }\n    return null;\n}\n"],"names":["$d0175d9ba891ce1f$var$Provider","name","constructor","urlMatch","url","$d0175d9ba891ce1f$export$95ff3f2cef1aeda","match","$d0175d9ba891ce1f$var$ProviderList","$b61950db06f93f98$var$handlePageAction","tabInfo","chrome","tabs","query","active","currentWindow","tabArray","provider","Object","entries","action","enable","tabId","disable","onActivated","addListener","webNavigation","onCommitted"],"version":3,"file":"background.js.map"}